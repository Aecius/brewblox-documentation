@startuml "Service Components"
[REST]
[SSE]
[InfluxDB]
[Events]

package Plugins {
    package Controlbox {
        [Datastore]
        [Backend]
        package Blocks
    }

    package Legacy {
    }
}

Plugins .up.> REST
Plugins .up.> SSE
Plugins .left.> "generates" Events
InfluxDB ..> "reads" Events

@enduml


@startuml "Startup"

participant application
participant "REST API" as REST
participant Events
participant SSE
participant InfluxDB
participant Controlbox
participant "Legacy Controller" as Legacy

application -> REST: create()
application -> Events: create()

application -> SSE: create(Events)
SSE -> Events: register()

application -> InfluxDB: create(Events)
InfluxDB -> Events: register()

application -> Controlbox: create(REST, SSE, InfluxDB, Events)
Controlbox -> REST: register_endpoints()
Controlbox -> Events: on_controller_connected()

application -> Legacy: create(REST, SSE, InfluxDB, Events)
Legacy -> REST: register_endpoints()
Legacy -> Events: on_controller_connected()

@enduml


@startuml "operation"

participant "REST API" as REST
participant SSE
participant Events
participant Datastore
participant InfluxDB
participant Controlbox

-> REST: HTTP request
REST -> Controlbox: command(args)
Controlbox -> : controller request
Controlbox <-- : controller reply
Controlbox -> Datastore: update
REST <-- Controlbox: command(): ok
<-- REST: HTTP reply

...

Controlbox <- : controller notification
Controlbox -> Datastore: update
Controlbox -> Events: publish(event)
Events -> InfluxDB: notify(event)
InfluxDB -> InfluxDB: write(event)
Events -> SSE: notify(event)
<- SSE: publish(event)

@enduml


@startuml "Micro services"

cloud GUI
node Gateway
node ControlBox
node LegacyController
node EventBus
node InfluxDB

GUI --> Gateway
Gateway --> EventBus
Gateway --> InfluxDB
Gateway --> ControlBox
Gateway --> LegacyController

ControlBox "publish" -down-> EventBus
LegacyController "publish" -down-> EventBus
InfluxDB "subscribe" -down-> EventBus

@enduml