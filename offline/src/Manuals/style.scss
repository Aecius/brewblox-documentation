:root {
  --percentage: 50;
  --distance: 0px;
}
@page {
  margin: 4cm 1cm 4cm 0cm;
  background: white; // background color
  $line-color: black; // color of header and footer lines
}
html {
  padding-left: 1cm;
  padding-right: 1cm;
  font-size: 12px !important;
}
.chapter {
  page-break-before: always;
  counter-reset: h2;
}
.pagebreak {
  page-break-after: always;
}

$border-color: black; // color of borders on blocks
body {
  margin: 2cm;
  margin-right: 0cm;
  padding-top: 0cm; // making space for header
  padding-bottom: 0cm; // making space for footer
}

h1 {
  font-family: "Titillium Web";
  font-weight: normal;
  color: black;
  font-size: (22rem / 12);
}

h2 {
  font-family: "Titillium Web SemiBold";
  color: black;
  font-weight: normal;
  font-size: (16rem / 12);
  page-break-after: avoid;
}
h3 {
  font-family: "Titillium Web";
  color: black;
  font-weight: normal;
  font-size: (15rem / 12);
}
p {
  font-family: "Roboto";
  color: black;
  font-size: 1rem;
}

//image types
.image {
  width: 100%;
}
.image {
  // VARIABLES FOR THE INPUT WOULD BE NICE
  .rotate {
    transform: rotate(90deg);
  }
  .resize {
    width: 50%; //(1% * var(--percenatage));
  }
  .resize.recenter {
    width: 50%; //(1% * var(--percenatage));
    margin-left: 24%;
  }
  //MANAGING OVERLAP
  .overlap {
    position: relative;
    top: 0px; /* Positoning: distance from top border */
    left: 0px; /* Positioning: distance from left border */
    .step8 {
      position: relative;
      top: -58px; //-280px; /* Positoning: distance from top border */
      left: 0px; /* Positioning: distance from left border */
      width: 85%;
      z-index: -1;
    }
    .step8._2 {
      @extend .step8;
      top: -140.5px; //-280px; /* Positoning: distance from top border */
      left: 0px; /* Positioning: distance from left border */
      z-index: 2;
    }
    .step9 {
      position: relative;
      top: -155.5px; //-729.5px; /* Positoning: distance from top border */
      left: -22px; /* Positioning: distance from left border */
      width: 105%;
    }
    .above {
      z-index: 2;
    }
  }
  //MANAGING CROPPING
  .crop {
    overflow: hidden;
  }
  .crop.bottom {
    @extend .crop;
    max-height: 200px;
  }
  .crop.top {
    @extend .crop;
    max-height: 200px;
    margin-top: -50%;
  }
  .crop.bottomhalf {
    @extend .crop.top;
    max-height: 50px;
    margin-bottom: 0px;
  }
}
.legend {
  width: 35%;
}
.icon {
  max-width: 24px;
}
////////////////////////////////////////////////////////////////////
//There must be a better way than this to handle movement.        //
////////////////////////////////////////////////////////////////////
.move {
  position: relative;
  .distance {
    .I {
      --distance: 1px;
    }
    .V {
      --distance: 5px;
    }
    .D {
      --distance: 10px;
    }
    .C {
      --distance: 100px;
    }
    .M {
      --distance: 1000px;
    }
  }

  .left {
    @extend .distance;
    left: -var(--distance);
  }
  .right {
    @extend .distance;
    left: var(--distance);
  }
  .up {
    @extend .distance;
    top: -var(--distance);
  }
  .down {
    @extend .distance;
    top: var(--distance);
  }
}

////////////////////////////////////////////////////////////////////
//   This bit defines what .step does                            //
//   .step is the class used for step by step image based        //
//   instruction manuals                                         //
///////////////////////////////////////////////////////////////////
.step {
  @extend .column;
  flex-grow: 1;
  width: 50%;
  max-width: 10cm;
  align-items: center; //stretch;
  justify-content: space-evenly; //space-evenly;
}
// defining all the things .step can do seperately for relative clarity
.step {
  .image {
    width: 100%; //at this width it actually fits 4 on the same page
    max-width: 260px;
    margin-top: 20px;
    margin-bottom: 20px;
    .icon {
      max-width: 36px;
      align-self: center;
      justify-self: center;
      padding: 0 5mm;
    }
  }
  .wide {
    width: 2 * 85%;
    max-width: 20cm;
    margin-left: 60%;
  }
  .row {
    align-items: center;
  }
  .caption {
    @extend .row;
    align-self: flex-start;
    align-items: baseline;
    .number {
      display: inline;
      font-family: "Titillium Web";
      font-size: (20rem / 12);
      padding-right: 5mm;
    }
    .icon {
      max-width: 48px;
      display: inline;
      align-self: center;
      justify-self: center;
      padding-right: 5mm;
    }
  }
}

//pretty tables here
table {
  page-break-inside: avoid;
  border: 1px solid black;
  border-collapse: collapse;
  font-family: "Roboto";
  color: black;
  font-size: 1rem;
  padding: 3px;
}
tr {
  border-bottom: 1px solid grey;
}
tr:last-child {
  border-bottom: 1px solid black;
}
th {
  padding: 3px;
  border-left: 1px solid grey;
}
th:first-child {
  border-left: 1px solid black;
}

td {
  border-left: 1px solid grey;
  padding: 3px;
}
td:first-child {
  border-left: 1px solid black;
  padding: 3px;
}
// Defining rows
.row {
  display: flex;
  flex-direction: row;
  page-break-inside: avoid;
}
.row.high {
  @extend .row;
  margin-top: -10%;
}
//and columns
.column {
  display: flex;
  flex-direction: column;
}
//aligning a section
.align {
  display: flex;
  align-content: center;
  justify-content: space-between;
  flex: 1;
}
//CAUTION! WARNING! NOTICE!  and all those fun blocks
.info-block {
  // block header
  background: rgb(221, 221, 221);
  border: 1px solid $border-color;
  margin: 1cm;
  padding: 5mm;
  .row {
    align-items: center;
  }
  .header {
    page-break-before: avoid;
    font-family: "Gill Sans MT";
    color: black;
    font-weight: bold;
    text-transform: uppercase;
    font-size: (22rem /12);
  }
  p {
    font-family: "Roboto";
    font-weight: Bold;
    font-stretch: condensed;
    font-size: 1rem;
  }
  .icon {
    max-width: 64px;
    align-self: center;
    justify-self: center;
    padding: 0 5mm;
  }
}

img {
  width: 680px;
  margin-left: -1cm;
}

//////////////////////////////////////////////////////
// This is an automatic numberer for headers        //
//////////////////////////////////////////////////////

body {
  counter-reset: h2;
}
h2 {
  counter-reset: h3;
}
h3 {
  counter-reset: h4;
}
h4 {
  counter-reset: h5;
}
h5 {
  counter-reset: h6;
}

h2:before {
  counter-increment: h2;
  content: counter(h2) ". ";
}
h3:before {
  counter-increment: h3;
  content: counter(h2) "." counter(h3) ". ";
}
h4:before {
  counter-increment: h4;
  content: counter(h2) "." counter(h3) "." counter(h4) ". ";
}
h5:before {
  counter-increment: h5;
  content: counter(h2) "." counter(h3) "." counter(h4) "." counter(h5) ". ";
}
h6:before {
  counter-increment: h6;
  content: counter(h2) "." counter(h3) "." counter(h4) "." counter(h5) "."
    counter(h6) ". ";
}

h2.nocount:before,
h3.nocount:before,
h4.nocount:before,
h5.nocount:before,
h6.nocount:before {
  content: "";
  counter-increment: none;
}

//////////////////////////////////////////////////////
// This is an automatic numberer for instructions    //
//////////////////////////////////////////////////////
h2 {
  counter-reset: p;
}

.step {
  p:before {
    counter-increment: p;
    content: counter(p) ". ";
    display: inline;
    font-family: "Titillium Web";
    font-size: (20rem / 12);
    padding-right: 5mm;
  }

  p.nocount:before {
    content: "";
    counter-increment: none;
  }
}
